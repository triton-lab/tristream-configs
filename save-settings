#!/usr/bin/env python3

import subprocess
import tarfile
from pathlib import Path
from typing import Set, Iterable, Generator


def prepare_dotfiles(root: Path, exclusions: Set[Path]) -> Generator[Path, None, None]:
    """
    Prepare a list of dotfiles and directories excluding the given paths in `exclusions`.

    :param home_directory: The home directory where to search for dotfiles
    :param exclusions: A set of paths to excluded from the search
    :return: A Generator of Paths
    """

    # Dig deeper into the directory tree and yield files that are not excluded.
    def _f(p: Path) -> Generator[Path, None, None]:
        if p in exclusions:
            return

        if p.is_file():
            yield p
        elif p.is_dir():
            if any(excl.is_relative_to(p) for excl in exclusions):
                for subitem in p.iterdir():
                    yield from _f(subitem)
            else:
                yield p

    for item in root.glob(".*"):
        yield from _f(item)


def create_tarball(paths: Iterable[Path], name: str) -> None:
    """
    Create a compressed tarball of the given list of files.

    :param file_list: The list of files and directories to compress
    :param tarball_name: The output name of the tarball file
    :param home_directory: The home directory as the base for relative paths
    """
    tarball_name = f"{name}.tar"

    # Create an uncompressed tarball
    with tarfile.open(tarball_name, "w") as tar:
        for path in paths:
            tar.add(path, arcname=path.relative_to(Path.home()))

    # Compress the tarball using zstd
    compressed_tarball_name = f"{tarball_name}.zst"
    with open(tarball_name, "rb") as source_file:
        with open(compressed_tarball_name, "wb") as dest_file:
            # Replace '3' with desired compression level
            subprocess.run(
                ["zstd", "-"], input=source_file.read(), stdout=dest_file, check=True
            )

    file_ = Path(tarball_name)
    file_.unlink()


def main() -> None:
    home = Path.home()
    name = "dotfiles"

    exclusions = {
        home / ".aws",
        home / ".cache",
        home / ".dbus",
        home / ".fzf",
        home / ".pki",
        home / ".config" / "Code" / "Cache",
        home / ".config" / "Code" / "CachedData",
        home / ".config" / "Code" / "CachedProfilesData",
        home / ".config" / "Code" / "Code Cache",
        home / ".config" / "Code" / "code.lock",
        home / ".config" / "Code" / "DawnCache",
        home / ".config" / "Code" / "GPUCache",
        home / ".config" / "appstream-home-folder",
        home / ".config" / "zsh",
        home / ".config" / "fish" / "completions",
    }

    file_list = prepare_dotfiles(home, exclusions)
    create_tarball(file_list, name)


if __name__ == "__main__":
    main()
